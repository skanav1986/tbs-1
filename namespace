properties ([
	parameters ([
		
		string(name: 'NAMESPACE', defaultValue: 'myapp-test', description: '', trim: true),
		string(name: 'GIT_URL', defaultValue: 'https://github.com/skanav1986/tbs-1.git', description: '', trim: true),
		string(name: 'REGISTRY-URL', defaultValue: '', trim: true), 
		string(name: 'REGISTRY-USER-ID', defaultValue: '', trim: true),
		string(name: 'REGISTRY-PASSWORD', defaultValue: '', trim: true),
        string(name: 'BRANCH_NAME', defaultValue: 'main', description: '', trim: true),
	
		
	])
])
pipeline {

    agent {
        kubernetes {
            defaultContainer 'jnlp'
            yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
     app.kubernetes.io/name: jenkins-build
     app.kubernetes.io/component: jenkins-build
     app.kubernetes.io/version: "1"
  namespace: myapp-test   
    
spec:
  containers:
  - name: k8s
    image: harborfortbs.test.com/jenkins/image
    command:
    - sleep
    args:
    - infinity
"""
        }
    }

    stages {

/*
        
        stage('Initialize the variables') {
            steps{
                script{
                   
                    NAMESPACE="myapp-test"
                    GIT_URL="https://github.com/skanav1986/tbs-1.git"
                    BRANCH_NAME="main"
		    REGISTRY-URL=""
		    REGISTRY-USER-ID=""
		    REGISTRY-PASSWORD=""
                    
                }
            }
        }       
*/
        stage('Fetch from GitHub') {
            steps {
                dir("app"){
                    git(
                        poll: true,
                        changelog: true,
                        branch: "${BRANCH_NAME}",
                        credentialsId: "github-creds",
                        url: "${GIT_URL}"
                    )
                    sh 'git rev-parse HEAD > git-commit.txt'
                }
            }
        }

        stage('Create Namespace') {
            steps {
                container('k8s') {
                    sh '''#!/bin/sh -e
                        export GIT_COMMIT=$(cat app/git-commit.txt)
                        echo "Start creating the namespace....." 
                        kubectl create ns ${NAMESPACE}
                    '''
                }
            }
        }
	stage('Create registry credentials') {
            steps {
                container('k8s') {
                    sh '''#!/bin/sh -e
                        export GIT_COMMIT=$(cat app/git-commit.txt)
                        echo "Start creating the registry credentials....." 
			export REGISTRY_PASSWORD=${REGISTRY-PASSWORD} 
                        kp secret create harbor-creds --registry ${REGISTRY-URL} --registry-user ${REGISTRY-USER-ID} -n ${NAMESPACE}

                    '''
		    }
		 }
       }		 
      }
      }
        
