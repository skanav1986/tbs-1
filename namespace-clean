properties ([
	parameters ([
		
		string(name: 'NAMESPACE', defaultValue: '', description: 'Enter the name to create a namespace', trim: true),
		string(name: 'BRANCH_NAME', defaultValue: '', description: 'Input the branch name', trim: true)
		
	])
])
pipeline {

    agent {
        kubernetes {
            defaultContainer 'jnlp'
            yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
     app.kubernetes.io/name: jenkins-build
     app.kubernetes.io/component: jenkins-build
     app.kubernetes.io/version: "1"
  namespace: myapp-test   
    
spec:
  containers:
  - name: k8s
    image: harborfortbs.test.com/jenkins/image
    command:
    - sleep
    args:
    - infinity
"""
        }
    }
    environment {
	    REGISTRY = 'harborfortbs.test.com'
	    REGISTRY_USER = credentials('registryUser')
	    REGISTRY_PASSWORD = credentials('registryPassword')
	    }

    stages {
        stage('Fetch from GitHub') {
            steps {
                
                    git(
                        poll: true,
                        changelog: true,
                        branch: "${BRANCH_NAME}",
                        credentialsId: "github-creds",
                        url: "${GIT_URL}"
                    )
                
            }
        }

        stage('Create Namespace') {
            steps {
                container('k8s') {
                    sh '''#!/bin/sh -e
                       
                        echo "Start creating the namespace....." 
                        kubectl create ns ${NAMESPACE}
                    '''
                }
            }
        }
	
	
	stage('Create registry credentials') {
            steps {
                container('k8s') {
                    sh '''#!/bin/sh -e
                      
                        echo "Start creating the registry credentials....." 
			export REGISTRY_PASSWORD=${REGISTRY_PASSWORD} 
                        kp secret create harbor-creds --registry ${REGISTRY} --registry-user ${REGISTRY_USER} -n ${NAMESPACE}

                    '''
		    }
		 }
       }		 
      }
      }
        
